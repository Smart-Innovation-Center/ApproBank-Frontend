{"remainingRequest":"/opt/dev/oriHenoc/ApproBank-frontend/ApproBank-Frontend/node_modules/babel-loader/lib/index.js!/opt/dev/oriHenoc/ApproBank-frontend/ApproBank-Frontend/node_modules/ts-loader/index.js??ref--13-2!/opt/dev/oriHenoc/ApproBank-frontend/ApproBank-Frontend/src/store/application/actions.ts","dependencies":[{"path":"/opt/dev/oriHenoc/ApproBank-frontend/ApproBank-Frontend/src/store/application/actions.ts","mtime":1611661516213},{"path":"/opt/dev/oriHenoc/ApproBank-frontend/ApproBank-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/dev/oriHenoc/ApproBank-frontend/ApproBank-Frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/opt/dev/oriHenoc/ApproBank-frontend/ApproBank-Frontend/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBhZGROb3RpZmljYXRpb246IGZ1bmN0aW9uIGFkZE5vdGlmaWNhdGlvbihjdHgsIHBheWxvYWQpIHsKICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICBjdHguY29tbWl0KCdhZGROb3RpZmljYXRpb24nLCBwYXlsb2FkKTsKICAgICAgcmVzb2x2ZSh0cnVlKTsKICAgIH0pOwogIH0sCiAgcmVtb3ZlTm90aWZpY2F0aW9uOiBmdW5jdGlvbiByZW1vdmVOb3RpZmljYXRpb24oY3R4LCBwYXlsb2FkKSB7CiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgY3R4LmNvbW1pdCgncmVtb3ZlTm90aWZpY2F0aW9uJywgcGF5bG9hZCk7CiAgICAgIHJlc29sdmUodHJ1ZSk7CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["/opt/dev/oriHenoc/ApproBank-frontend/ApproBank-Frontend/src/store/application/actions.ts"],"names":[],"mappings":";AAAA,eAAe;AACX,EAAA,eADW,2BACK,GADL,EACU,OADV,EACiB;AACxB,WAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAY;AAC3B,MAAA,GAAG,CAAC,MAAJ,CAAW,iBAAX,EAA8B,OAA9B;AACA,MAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAHM,CAAP;AAIH,GANU;AAOX,EAAA,kBAPW,8BAOQ,GAPR,EAOa,OAPb,EAOoB;AAC3B,WAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAY;AAC3B,MAAA,GAAG,CAAC,MAAJ,CAAW,oBAAX,EAAiC,OAAjC;AACA,MAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAHM,CAAP;AAIH;AAZU,CAAf","sourcesContent":["export default {\n    addNotification(ctx, payload){\n        return new Promise((resolve) => {\n            ctx.commit('addNotification', payload);\n            resolve(true)\n        })\n    },\n    removeNotification(ctx, payload){\n        return new Promise((resolve) => {\n            ctx.commit('removeNotification', payload);\n            resolve(true)\n        })\n    }\n}\n"],"sourceRoot":""}]}