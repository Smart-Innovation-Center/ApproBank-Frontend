{"remainingRequest":"/opt/dev/oriHenoc/ApproBank-frontend/node_modules/babel-loader/lib/index.js!/opt/dev/oriHenoc/ApproBank-frontend/node_modules/ts-loader/index.js??ref--13-2!/opt/dev/oriHenoc/ApproBank-frontend/src/store/validatorBank/actions.ts","dependencies":[{"path":"/opt/dev/oriHenoc/ApproBank-frontend/src/store/validatorBank/actions.ts","mtime":1613066110963},{"path":"/opt/dev/oriHenoc/ApproBank-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/dev/oriHenoc/ApproBank-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/opt/dev/oriHenoc/ApproBank-frontend/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBheGlvcyBmcm9tICIuLi8uLi9heGlvcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBsb2FkVmFsaWRhdG9yc0Jhbms6IGZ1bmN0aW9uIGxvYWRWYWxpZGF0b3JzQmFuayhfcmVmLCBwYXlsb2FkKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICBjb25zb2xlLmxvZygncGF5bG9hZCA9PiAnLCBwYXlsb2FkKTsKICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgIGF4aW9zLmdldCgidmFsaWRhdG9yc0J5QmFuay8iLmNvbmNhdChwYXlsb2FkKSwgcGF5bG9hZCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7CiAgICAgICAgY29tbWl0KCJTRVRfVkFMSURBVE9SU19CQU5LIiwgcmVzcG9uc2UpOwogICAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICByZWplY3QoZXJyb3IpOwogICAgICB9KTsKICAgIH0pOwogIH0sCiAgYWRkVmFsaWRhdG9yQmFuazogZnVuY3Rpb24gYWRkVmFsaWRhdG9yQmFuayhjdHgsIHBheWxvYWQpIHsvL2NvbnNvbGUubG9nKCdwYXlsb2FkIDo+PiAnLCBwYXlsb2FkKTsKICAgIC8vIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAvLyAgICAgYXhpb3MKICAgIC8vICAgICAgICAgLnBvc3QoJ3ZhbGlkYXRvckJhbmtBZGQnLCBwYXlsb2FkKQogICAgLy8gICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAvLyAgICAgICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTsKICAgIC8vICAgICAgICAgfSkKICAgIC8vICAgICAgICAgLmNhdGNoKChlcnJvcik9PnsKICAgIC8vICAgICAgICAgICAgIHJlamVjdChlcnJvcik7CiAgICAvLyAgICAgICAgIH0pCiAgICAvLyB9KQogIH0sCiAgZWRpdFZhbGlkYXRvckJhbms6IGZ1bmN0aW9uIGVkaXRWYWxpZGF0b3JCYW5rKGN0eCwgcGF5bG9hZCkgey8vY29uc29sZS5sb2coJ3BheWxvYWQgOj4+ICcsIHBheWxvYWQpOwogICAgLy8gICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgLy8gICAgICAgYXhpb3MKICAgIC8vICAgICAgICAgICAucG9zdCgncmliRWRpdCcsIHBheWxvYWQpCiAgICAvLyAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgLy8gICAgICAgICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTsKICAgIC8vICAgICAgICAgICB9KQogICAgLy8gICAgICAgICAgIC5jYXRjaCgoZXJyb3IpPT57CiAgICAvLyAgICAgICAgICAgICAgIHJlamVjdChlcnJvcik7CiAgICAvLyAgICAgICAgICAgfSkKICAgIC8vICAgfSkKICB9LAogIHVwZGF0ZVZhbGlkYXRvckJhbms6IGZ1bmN0aW9uIHVwZGF0ZVZhbGlkYXRvckJhbmsoY3R4LCBwYXlsb2FkKSB7Ly8gICBwYXlsb2FkLmJhbmtfaWQgPSBwYXlsb2FkLmJhbmtJRC5pZDsKICAgIC8vIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAvLyAgICAgYXhpb3MKICAgIC8vICAgICAgICAgLnBvc3QoYHJpYlVwZGF0ZS8ke3BheWxvYWQuaWR9YCxwYXlsb2FkKQogICAgLy8gICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAvLyAgICAgICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTsKICAgIC8vICAgICAgICAgfSkKICAgIC8vICAgICAgICAgLmNhdGNoKChlcnJvcik9PnsKICAgIC8vICAgICAgICAgICAgIHJlamVjdChlcnJvcik7CiAgICAvLyAgICAgICAgIH0pCiAgICAvLyB9KQogIH0sCiAgZGVsZXRlVmFsaWRhdG9yQmFuazogZnVuY3Rpb24gZGVsZXRlVmFsaWRhdG9yQmFuayhjdHgsIHBheWxvYWQpIHsvLyByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgLy8gICAgIGF4aW9zCiAgICAvLyAgICAgICAgIC5kZWxldGUoYHJpYkRlbGV0ZS8ke3BheWxvYWR9YCkKICAgIC8vICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgLy8gICAgICAgICAgICAgcmVzb2x2ZShyZXNwb25zZSk7CiAgICAvLyAgICAgICAgIH0pCiAgICAvLyAgICAgICAgIC5jYXRjaCgoZXJyb3IpPT57CiAgICAvLyAgICAgICAgICAgICByZWplY3QoZXJyb3IpOwogICAgLy8gICAgICAgICB9KQogICAgLy8gfSkKICB9Cn07"},{"version":3,"sources":["/opt/dev/oriHenoc/ApproBank-frontend/src/store/validatorBank/actions.ts"],"names":[],"mappings":";AAAA,OAAO,KAAP,MAAkB,aAAlB;AAEA,eAAe;AACX,EAAA,kBADW,oCACkB,OADlB,EACyB;AAAA,QAAhB,MAAgB,QAAhB,MAAgB;AAChC,IAAA,OAAO,CAAC,GAAR,CAAY,aAAZ,EAA0B,OAA1B;AACA,WAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;AAC/B,MAAA,KAAK,CACA,GADL,4BAC6B,OAD7B,GACuC,OADvC,EAEK,IAFL,CAEU,UAAA,QAAQ,EAAG;AACb,QAAA,OAAO,CAAC,QAAD,CAAP;AACA,QAAA,OAAO,CAAC,GAAR,CAAY,QAAZ;AACA,QAAA,MAAM,CAAC,qBAAD,EAAwB,QAAxB,CAAN;AACH,OANL,WAOW,UAAC,KAAD,EAAS;AACZ,QAAA,MAAM,CAAC,KAAD,CAAN;AACH,OATL;AAUH,KAXE,CAAP;AAaD,GAhBQ;AAkBT,EAAA,gBAlBS,4BAkBQ,GAlBR,EAkBa,OAlBb,EAkBoB,CACzB;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GA/BU;AAiCX,EAAA,iBAjCW,6BAiCO,GAjCP,EAiCY,OAjCZ,EAiCmB,CAC1B;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA9CY;AAgDb,EAAA,mBAhDa,+BAgDO,GAhDP,EAgDY,OAhDZ,EAgDmB,CAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA5DY;AA8Db,EAAA,mBA9Da,+BA8DO,GA9DP,EA8DY,OA9DZ,EA8DmB,CAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AAzEU,CAAf","sourcesContent":["import axios from \"../../axios\"\n\nexport default {\n    loadValidatorsBank({commit}, payload){\n        console.log('payload => ',payload)\n        return new Promise((resolve, reject) => {\n                axios\n                    .get(`validatorsByBank/${payload}`,payload)\n                    .then(response => {\n                        resolve(response);\n                        console.log(response)\n                        commit(\"SET_VALIDATORS_BANK\", response);\n                    })\n                    .catch((error)=>{\n                        reject(error);\n                    })\n            })\n        \n      },\n\n      addValidatorBank(ctx, payload){\n          //console.log('payload :>> ', payload);\n          \n        // return new Promise((resolve, reject) => {\n        //     axios\n        //         .post('validatorBankAdd', payload)\n        //         .then(response => {\n        //             resolve(response);\n        //         })\n        //         .catch((error)=>{\n        //             reject(error);\n        //         })\n        // })\n    },\n\n    editValidatorBank(ctx, payload){\n        //console.log('payload :>> ', payload);\n        \n    //   return new Promise((resolve, reject) => {\n    //       axios\n    //           .post('ribEdit', payload)\n    //           .then(response => {\n    //               resolve(response);\n    //           })\n    //           .catch((error)=>{\n    //               reject(error);\n    //           })\n    //   })\n  },\n\n  updateValidatorBank(ctx, payload){\n    //   payload.bank_id = payload.bankID.id;\n    // return new Promise((resolve, reject) => {\n    //     axios\n    //         .post(`ribUpdate/${payload.id}`,payload)\n    //         .then(response => {\n    //             resolve(response);\n    //         })\n    //         .catch((error)=>{\n    //             reject(error);\n    //         })\n    // })\n  },\n\n  deleteValidatorBank(ctx, payload){\n        // return new Promise((resolve, reject) => {\n        //     axios\n        //         .delete(`ribDelete/${payload}`)\n        //         .then(response => {\n        //             resolve(response);\n        //         })\n        //         .catch((error)=>{\n        //             reject(error);\n        //         })\n        // })\n    },\n\n}\n\n"],"sourceRoot":""}]}