{"remainingRequest":"/opt/dev/oriHenoc/ApproBank-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/dev/oriHenoc/ApproBank-frontend/src/views/pages/dashboard.vue?vue&type=template&id=0281c342&","dependencies":[{"path":"/opt/dev/oriHenoc/ApproBank-frontend/src/views/pages/dashboard.vue","mtime":1612279683997},{"path":"/opt/dev/oriHenoc/ApproBank-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/dev/oriHenoc/ApproBank-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/opt/dev/oriHenoc/ApproBank-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/dev/oriHenoc/ApproBank-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}