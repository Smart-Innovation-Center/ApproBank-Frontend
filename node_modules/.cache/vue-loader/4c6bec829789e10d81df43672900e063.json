{"remainingRequest":"E:\\SIC's Arena\\Approbank\\ApproBank-Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\SIC's Arena\\Approbank\\ApproBank-Frontend\\src\\views\\pages\\dashboard.vue?vue&type=template&id=0281c342&","dependencies":[{"path":"E:\\SIC's Arena\\Approbank\\ApproBank-Frontend\\src\\views\\pages\\dashboard.vue","mtime":1613584343586},{"path":"E:\\SIC's Arena\\Approbank\\ApproBank-Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\SIC's Arena\\Approbank\\ApproBank-Frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\SIC's Arena\\Approbank\\ApproBank-Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\SIC's Arena\\Approbank\\ApproBank-Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}